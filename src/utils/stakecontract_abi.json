[
  {
    "inputs": [
      {
        "internalType": "contract IERC20",
        "name": "_rewardToken",
        "type": "address"
      },
      {
        "internalType": "contract IERC20",
        "name": "_allowedStakeToken",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "balance",
        "type": "uint256"
      }
    ],
    "name": "rewardCheck",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "calculateReward",
    "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "_amount", "type": "uint256" }
    ],
    "name": "claimReward",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "uint256", "name": "_amount", "type": "uint256" }
    ],
    "name": "stake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      { "internalType": "address", "name": "_user", "type": "address" }
    ],
    "name": "userInfo",
    "outputs": [
      {
        "components": [
          { "internalType": "uint256", "name": "amount", "type": "uint256" },
          {
            "internalType": "uint256",
            "name": "initialStaketime",
            "type": "uint256"
          },
          { "internalType": "bool", "name": "stakeStatus", "type": "bool" },
          {
            "internalType": "uint256",
            "name": "tokenEarned",
            "type": "uint256"
          }
        ],
        "internalType": "struct staking.stakerDetail",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdrawStaking",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
]
